import { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Switch } from "@/components/ui/switch";
import { motion } from "framer-motion";

const COINMARKETCAP_API = "https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest";
const API_KEY = "c9f5c426-98fc-4633-a6c0-ff00b8b1e9ed"; // Replace with your actual API key
const UPDATE_INTERVAL = 24 * 60 * 60 * 1000 / 10; // 10 times per day

export default function CryptoDashboard() {
  const [theme, setTheme] = useState("matrix");
  const [prices, setPrices] = useState({});

  const fetchCryptoPrices = async () => {
    try {
      const response = await fetch(`${COINMARKETCAP_API}?symbol=BTC,ETH&convert=USD`, {
        headers: {
          "X-CMC_PRO_API_KEY": API_KEY,
          "Accept": "application/json"
        }
      });
      const data = await response.json();
      setPrices({
        BTCUSDT: data.data.BTC.quote.USD.price,
        ETHUSDT: data.data.ETH.quote.USD.price,
      });
    } catch (error) {
      console.error("Error fetching crypto prices:", error);
    }
  };

  useEffect(() => {
    fetchCryptoPrices();
    const interval = setInterval(fetchCryptoPrices, UPDATE_INTERVAL);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className={theme === "matrix" ? "bg-black text-green-400" : "bg-gray-900 text-white"}>
      <div className="p-4 flex justify-between items-center">
        <h1 className="text-3xl font-bold">Crypto Dashboard</h1>
        <div className="flex items-center gap-2">
          <span>Matrix Mode</span>
          <Switch checked={theme === "matrix"} onCheckedChange={() => setTheme(theme === "matrix" ? "default" : "matrix")} />
        </div>
      </div>
      <div className="grid grid-cols-3 gap-4 p-4">
        {Object.entries(prices).map(([symbol, price]) => (
          <motion.div key={symbol} initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.5 }}>
            <Card>
              <CardContent className="p-4 text-center">
                <h2 className="text-xl font-bold">{symbol}</h2>
                <p className="text-2xl">${price.toFixed(2)}</p>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>
    </div>
  );
}

// Ensure Vercel rewrites work correctly
export const config = {
  runtime: "edge"
};
